name: Deploy prod

on:
  workflow_dispatch:

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up JDK 23
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Build Podman image
        run: |
          podman build \
            -t geohod-backend:latest \
            --label stage=prod \
            -f ./.github/Dockerfile .

      - name: Save Podman image to tarball
        run: podman save -o geohod-backend-image.tar.gz geohod-backend:latest

      - name: Create .env file
        run: |
          cat << EOF > .env
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          LOGGING_LEVEL_ROOT=WARN
          LOGGING_LEVEL_ME_GEOHOD=DEBUG
          SPRING_DATASOURCE_URL=jdbc:postgresql://geohod-postgres:5432/${{ secrets.POSTGRES_DB }}
          SPRING_DATASOURCE_USERNAME=${{ secrets.POSTGRES_USER }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          GEOHOD_TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          GEOHOD_TELEGRAM_BOT_USERNAME=${{ secrets.TELEGRAM_BOT_USERNAME }}
          GEOHOD_CREATED_EVENT_LINK_TEMPLATE=${{ vars.GEOHOD_CREATED_EVENT_LINK_TEMPLATE }}
          GEOHOD_REVIEW_LINK_TEMPLATE=${{ vars.GEOHOD_REVIEW_LINK_TEMPLATE }}
          CORS_ALLOWED_ORIGINS=${{ vars.CORS_ALLOWED_ORIGINS }}
          EOF

      - name: Transfer env & artifacts to VPS
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: ".env,geohod-backend-image.tar.gz"
          target: "~/geohod-backend"

      - name: Transfer configuration to VPS
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "deployments/prod/podman-compose.yml,deployments/prod/install.sh,deployments/prod/geohod-backend.service"
          target: "~/geohod-backend"
          strip_components: 2

      - name: Execute remote deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            chmod +x ~/geohod-backend/install.sh
            ~/geohod-backend/install.sh